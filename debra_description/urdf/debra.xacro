<?xml version="1.0"?>
<robot name="debra" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Included URDF/XACRO Files -->
  <xacro:include filename="$(find debra_description)/urdf/common_properties.xacro" />
  <xacro:include filename="$(find debra_description)/urdf/materials.xacro" />
  <xacro:include filename="$(find debra_description)/urdf/wheel.xacro" />
  <xacro:include filename="$(find debra_description)/urdf/arm_support.xacro" />
  <xacro:include filename="$(find debra_description)/urdf/arm_slider.xacro" />
  <xacro:include filename="$(find debra_description)/urdf/arm_arm.xacro" />

  <!-- BASE-FOOTPRINT -->
  <!-- base_footprint is a fictitious link(frame) that is on the ground right below base_link origin -->
  <link name="base_footprint">
    <visual>
        <origin xyz="0 0 0"
                rpy="0 0 0" />
        <geometry>
            <box size="0.001 0.001 0.001" />
        </geometry>
    </visual>
  </link>

  <gazebo reference="base_footprint">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>

  <joint name="base_footprint_joint"
         type="fixed">
  <origin xyz="0 0 ${wheel_radius - base_z_origin_to_wheel_origin}"
          rpy="0 0 0" />
    <parent link="base_footprint"/>
    <child link="base_link" />
    <hardwareInterface>EffortJointInterface</hardwareInterface>
  </joint>

  <!-- BASE-LINK -->
  <!--Actual body/chassis of the robot-->
  <link name="base_link">
    <inertial>
      <mass value="${base_mass}" />
      <origin xyz="0 0 0"
              rpy="0 0 0" />
      <!--The 3x3 rotational inertia matrix. -->
      <box_inertia m="${base_mass}"
                   x="${base_x_size}"
                   y="${base_y_size}"
                   z="${base_z_size}"/>
    </inertial>
    <visual>
      <origin xyz="0 0 0"
              rpy="0 0 0" />
      <geometry>
        <box size="${base_x_size} ${base_y_size} ${base_z_size}"/>
      </geometry>
      <material name="LightGrey" />
    </visual>
    <collision>
      <origin xyz="0 0 0"
              rpy="0 0 0 " />
      <geometry>
        <box size="${base_x_size} ${base_y_size} ${base_z_size}"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="base_link">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/White</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>


  <!-- WHEELs -->
  <wheel lr="right"
         parent="base_link"
         translateX="1"
         translateY="-1"
         flipY="-1" />
  <wheel lr="left"
         parent="base_link"
         translateX="1"
         translateY="1"
         flipY="-1" />

  <!-- ARMS -->
  <arm_support lr="right"
               parent="base_link"
               translateX="0"
               translateY="-1"
               flipY="0" />
  <arm_support lr="left"
               parent="base_link"
               translateX="0"
               translateY="1"
               flipY="0" />

  <arm_slider lr="right"
              parent="right_arm_support"
              translateX="0"
              translateY="-1"
              flipY="0" />
  <arm_slider lr="left"
              parent="left_arm_support"
              translateX="0"
              translateY="1"
              flipY="0" />

  <arm_arm lr="right"
           parent="right_arm_slider"
           translateX="1"
           translateY="-1"
           flipY="0" />
  <arm_arm lr="left"
           parent="left_arm_slider"
           translateX="1"
           translateY="1"
           flipY="0" />

  <!-- Base controller -->
  <gazebo>
    <plugin name="differential_drive_controller"
            filename="libgazebo_ros_diff_drive.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>${update_rate}</updateRate>
      <leftJoint>base_link_right_wheel_joint</leftJoint>
      <rightJoint>base_link_left_wheel_joint</rightJoint>
      <wheelSeparation>${wheel_separation}</wheelSeparation>
      <wheelDiameter>${wheel_radius * 2}</wheelDiameter>
      <torque>20</torque>
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <robotBaseFrame>base_footprint</robotBaseFrame>
    </plugin>
    <plugin name="gazebo_ros_control"
            filename="libgazebo_ros_control.so" />
  </gazebo>

  <!-- Arm controller -->
  <gazebo>
    <plugin name="gazebo_ros_control"
            filename="libgazebo_ros_control.so">
      <robotNamespace>/debra</robotNamespace>
    </plugin>
  </gazebo>

    <!-- Hokuyo laser controller -->
  <gazebo reference="hokuyo_link">
    <sensor type="gpu_ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>50</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the
               true reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>/debra/laser/scan</topicName>
        <frameName>hokuyo_link</frameName>
      </plugin>
    </sensor>
  </gazebo>

</robot>
